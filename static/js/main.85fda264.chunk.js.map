{"version":3,"sources":["components/team.png","components/ratings.js","components/RatingRadio.js","reducers/userSlice.js","reducers/courseSlice.js","components/FeedbackSubmissionForm.js","components/Feedback.js","reducers/commentSlice.js","components/FeedbackConfirmation.js","reducers/userInfo.js","components/RenderData.js","components/RenderEdited.js","components/FeedbackSummary.js","App.js","services/userInfoService.js","sagas/userInfoSaga.js","rootSaga.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","ratings","RatingRadio","setRadio","id","type","name","value","onClick","e","required","userSlice","createSlice","initialState","user","reducers","setUser","state","action","payload","actions","selectUser","courseSlice","course","rating","setCourse","selectCourse","setRating","selectRating","FeedbackSubmissionForm","useState","userName","setUserName","courseName","setCourseName","radioValue","setRadioValue","dispatch","useDispatch","history","useHistory","useSelector","useEffect","document","getElementById","checked","radValue","className","onSubmit","preventDefault","push","placeholder","onChange","target","map","currentRating","src","team","alt","Feedback","commentSlice","comments","setUserComment","selectComments","FeedbackConfirmation","props","userComments","setUserComments","console","log","axios","post","username","coursename","then","res","catch","err","userInfoSlice","userInfo","setUserInfo","selectUserInfo","RenderData","fn","RenderEdited","FeedbackSummary","response","setResponse","idToEdit","setIdToEdit","editedRecord","setEditedRecord","showEdited","setShowEdited","style","width","item","index","key","_id","row","cells","innerHTML","$","modal","showModal","class","tabindex","role","data-dismiss","aria-label","aria-hidden","hidden","editedUserName","editedCourseName","editedRating","editedComment","url","put","App","exact","from","to","path","a","get","data","userInfoService","fetchUserInfo","waitForUserInfo","call","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","userReducer","courseReducer","commentReducer","userInfoReducer","store","createStore","composeWithDevTools","applyMiddleware","run","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85fda264.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/team.efda9a03.png\";","const ratings={\n    \"rating\":[\"Excellent\",\"Good\",\"Average\",\"Fair\",\"Poor\"]\n};\n\nexport default ratings;","import React,{useState} from 'react'\n\n\nfunction RatingRadio({ratings,setRadio}) {\n\n    \n    return (\n        <div>       \n         <input \n         id={ratings}\n        type=\"radio\"\n        name=\"rating\"\n        value={ratings}\n            onClick={e=>setRadio(ratings)}\n            required=\"required\" \n\n      />\n      <label>{ratings}</label>\n      </div>\n\n    )\n}\n\nexport default RatingRadio\n","import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const userSlice = createSlice({\n  name:\"user\",\n  initialState: {\n    user: null,\n   \n  },\n  reducers: {\n   setUser:(state,action) =>{\n     state.user=action.payload;\n   }\n  },\n});\n\nexport const { setUser } = userSlice.actions;\n\nexport const selectUser = state => state.user.user;\n\nexport default userSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const courseSlice = createSlice({\n  name:\"course\",\n  initialState: {\n    course: null,\n    rating:null,\n    //comments:null\n   \n  },\n  reducers: {\n   setCourse:(state,action) =>{ \n      state.course=action.payload.course;\n      state.rating=action.payload.rating;\n     //state.comments=action.payload.comments;\n   },\n  \n\n  }});\n\nexport const { setCourse,setRating} = courseSlice.actions;\n\nexport const selectCourse = state => state.course.course;\nexport const selectRating = state =>state.course.rating;\n//export const selectComments = state =>state.course.comments;\n\nexport default courseSlice.reducer;\n","import React,{useState,useEffect} from 'react';\nimport \"../components/Feedback.css\";\nimport ratings from \"../components/ratings.js\";\nimport RatingRadio from \"../components/RatingRadio\";\nimport team from \"../components/team.png\";\nimport {useDispatch,useSelector} from \"react-redux\";\nimport {setUser,selectUser} from \"../reducers/userSlice\"\nimport {setCourse,selectCourse} from \"../reducers/courseSlice\"\nimport {setRating,selectRating} from \"../reducers/courseSlice\"\nimport {useHistory} from \"react-router-dom\"\n\nfunction FeedbackSubmissionForm() {\n    const [userName,setUserName]=useState(\"\");\n    const [courseName,setCourseName]=useState(\"\");\n    const [radioValue,setRadioValue]=useState(\"\");\n    const dispatch=useDispatch();\n    const history=useHistory();\n    const user=useSelector(selectUser);\n    const course=useSelector(selectCourse);\n    const rating=useSelector(selectRating);\n   \n    useEffect(() => {\n        if(user){\n            setUserName(user.user);\n        } \n        if(course){\n            setCourseName(course)\n        }\n        if(rating){\n            setRadioValue(rating)\n            document.getElementById(rating).checked=true;\n        }\n\n    }, [])\n   \n    \n const setRadio = (radValue)=>\n {\n     setRadioValue(radValue);\n }\n   const saveGlobally=(e) =>{\n        e.preventDefault();\n        dispatch(\n                setUser({\n                        user:userName,\n                    }),\n                   \n                )\n                dispatch(\n                    setCourse({\n                        course:courseName,                        \n                        rating:radioValue,\n\n                \n                    }),\n                    \n                 \n                   \n                )\n                // console.log(radioValue)\n                history.push(\"/feedback_submit\");\n   };\n   \n   const onUserNameChange = (e)=>{\n    // existing user is a placeholder \n        if(e.target.value !== userName){\n            setUserName(e.target.value)\n        }\n    }\n    \n\n    return (\n       <div className=\"feedback__submission\">\n           <form className=\"feedback__form\"  onSubmit={saveGlobally}>\n               <p>Please input UserName:</p>\n               <input required type=\"text\" placeholder=\"username\" onChange={onUserNameChange} value={userName}/>\n               <p>Please input CourseName:</p>\n               <input required type=\"text\" placeholder=\"coursename\" onChange={(e)=>setCourseName(e.target.value)} value={courseName}/>\n               <p>Please rate your course</p>\n                {ratings.rating.map((currentRating)=>(\n                    < div className=\"ratings__selection\">\n                        <RatingRadio ratings={currentRating} setRadio = {setRadio} />\n                    </div>\n                ))}\n                <button >Next</button>\n            </form>\n           <img src={team} alt=\"\"/>\n           <div><h1></h1></div>\n       </div> \n    )\n}\n\nexport default FeedbackSubmissionForm\n","    import React from 'react';\n    import \"../components/Feedback.css\";\nimport FeedbackSubmissionForm from \"../components/FeedbackSubmissionForm\";\n\nfunction Feedback() {\n    return (\n        <div className=\"feedback__management__system\">\n            <div className=\"feedback__header\">\n                <h1>Feedback Management System</h1>\n                <h3>Please Rate your course</h3>\n            </div>\n            <div className=\"feedback__submission_form\">\n                <FeedbackSubmissionForm />\n            </div>\n        </div>\n    )\n}\n\nexport default Feedback\n","import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const commentSlice = createSlice({\n  name:\"comments\",\n  initialState: {\n    \n    comments:null\n   \n  },\n  reducers: {\n   setUserComment:(state,action) =>{ \n    \n     state.comments=action.payload.comments;\n   },\n  \n\n  }});\n\nexport const { setUserComment } = commentSlice.actions;\n\n\nexport const selectComments = state =>state.course.comments;\n\nexport default commentSlice.reducer;\n","import React, { useState, useEffect } from \"react\";\n\nimport { setCourse, selectCourse, selectRating } from \"../reducers/courseSlice\";\nimport { selectComments } from \"../reducers/commentSlice\";\nimport \"./FeedbackConfirmation.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"../reducers/userSlice\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { setUserComment } from \"../reducers/commentSlice\";\n\n//import actionType from \"../actions/actionType\";\n\nconst FeedbackConfirmation = (props) => {\n  const [userComments, setUserComments] = useState(\"\");\n  const history = useHistory();\n  const user = useSelector(selectUser);\n  const course = useSelector(selectCourse);\n  const rating = useSelector(selectRating);\n  const comments = useSelector(selectComments);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (comments) {\n      setUserComments(comments);\n    }\n  }, []);\n\n  const handleSubmit = (e) => {\n    console.log(\"comments \", comments);\n\n    e.preventDefault();\n    dispatch(\n      setUserComment({\n        comments: userComments,\n      })\n    );\n\n    /// dispatch({type:actionType.SAVE_DATA_ASYNC})\n\n    axios\n      .post(\"https://secure-shelf-01993.herokuapp.com/feedback_summary\", {\n        username: user.user,\n        coursename: course,\n        rating: rating,\n        comments: userComments,\n      })\n      .then((res) => {\n        console.log(\"successfully posted\");\n        console.log(history);\n        history.push(\"/feedback_summary\");\n      })\n      .catch((err) => {\n        console.log(\"coming from comments.js handle submit\", err);\n        ///res.status(500).json({ msg: \"Error Occurred\" });\n      });\n  };\n\n  const handleBack = () => {\n    history.push(\"/feedback\");\n  };\n\n  ////const history=useHistory();\n  // console.log(user.user);\n  //console.log(course);\n  //console.log(rating);\n  return (\n    <div className=\"comments\">\n      <div className=\"confirm__container\">\n        <form className=\"form__comments\">\n          <h4>Please provide additional comments</h4>\n          <label>Name:</label>\n          <input type=\"text\" value={`${user ? user.user : \"No one\"}`} />\n          <br />\n          <label>Course Name:</label>\n          <input type=\"text\" value={course} />\n          <br />\n          <label>Rating:</label>\n          <input type=\"text\" value={rating} />\n          <br />\n          <label>Additional Comments:</label>\n          <input\n            type=\"text\"\n            value={comments}\n            onChange={(e) => setUserComments(e.target.value)}\n          />\n          <br />\n          {/* <Link to=\"/summary\"> */}\n          <button onClick={handleBack}>Back</button>\n          <input type=\"submit\" onClick={handleSubmit} value=\"Submit\" />\n\n          {/* </Link> */}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default FeedbackConfirmation;\n\n// export const selectCourse = state => state.course.course;\n// export const selectRating = state =>state.course.rating;\n","import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const userInfoSlice = createSlice({\n  name:\"userInfo\",\n  initialState: {\n    userInfo: [],\n   \n  },\n  reducers: {\n   setUserInfo:(state,action) =>{\n     state.userInfo=action.payload;\n   }\n  },\n});\n\nexport const { setUserInfo } = userInfoSlice.actions;\n\nexport const selectUserInfo = state => state.userInfo.userInfo;\n\nexport default userInfoSlice.reducer;\n","import React from 'react';\nimport {useDispatch,useSelector} from \"react-redux\";\nimport {selectUserInfo} from \"../reducers/userInfo\";\n\nfunction RenderData({fn}) {\n    const userInfo=useSelector(selectUserInfo);\n    fn(userInfo);\n    //setResponse(userInfo)\n    return (\n        <div>\n        \n        </div>\n    )\n}\n\nexport default RenderData\n","import React from 'react'\nimport {useDispatch,useSelector} from \"react-redux\";\nimport {selectUserInfo} from \"../reducers/userInfo\";\nfunction RenderEdited({fn}) {\n    const userInfo=useSelector(selectUserInfo);\n    fn(userInfo);\n    return (\n        <div >\n            \n        </div>\n    )\n}\n\nexport default RenderEdited\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserInfo } from \"../reducers/userInfo\";\nimport { selectUser } from \"../reducers/userSlice\";\nimport { setCourse, selectCourse, selectRating } from \"../reducers/courseSlice\";\nimport { selectComments } from \"../reducers/commentSlice\";\nimport RenderData from \"./RenderData\";\nimport RenderEdited from \"./RenderEdited\";\nimport \"./FeedbackSummary.css\";\nconst FeedbackSummary = () => {\n  let userInfo = useSelector(selectUserInfo);\n  const user = useSelector(selectUser);\n  const course = useSelector(selectCourse);\n  const rating = useSelector(selectRating);\n  const userComments = useSelector(selectComments);\n  const dispatch = useDispatch();\n  const [response, setResponse] = useState([]);\n  const [idToEdit, setIdToEdit] = useState(\"\");\n  const [editedRecord, setEditedRecord] = useState(\"\");\n  const [showEdited, setShowEdited] = useState(false);\n  useEffect(() => {\n    //Axios\n    //  axios.get(\"https://secure-shelf-01993.herokuapp.com/feedback_summary\").then((res) => {\n    //    console.log(\"successfully received \",res  );\n    //    setResponse(res.data);\n    //  });\n    console.log(\"Is this getting called\");\n    dispatch({ type: \"FETCH_USER_INFO\" });\n    //  setResponse(userInfo);\n    if (editedRecord != \"\") {\n      dispatch({ type: \"FETCH_USER_INFO\" });\n\n      setShowEdited(true);\n    }\n  }, [editedRecord]);\n  // useEffect(() => {\n\n  //   if(editedRecord != \"\"){\n\n  //     dispatch({ type: \"FETCH_USER_INFO\" });\n  //     setTimeout(10000);\n  //     setShowEdited(true);\n  //   }\n\n  // }, [editedRecord]);\n  const showModal = (id) => {\n    //console.log(id);\n    setIdToEdit(id);\n    // console.log(\"username \", user);\n    // console.log(\"coursename \", course);\n    // console.log(\"rating \", rating);\n    let row = document.getElementById(id);\n    document.getElementById(\"edit__userName\").value = row.cells[0].innerHTML;\n    document.getElementById(\"edit__courseName\").value = row.cells[1].innerHTML;\n    document.getElementById(\"edit__rating\").value = row.cells[2].innerHTML;\n    document.getElementById(\"edit__comment\").value = row.cells[3].innerHTML;\n    document.getElementById(\"unique_id\").value = id;\n    console.log(`This is working`);\n    console.log(document.getElementById(\"unique_id\").value);\n    $(\"#myModal\").modal(\"show\");\n  };\n  ///const id = id;\n  const handleSave = () => {\n    //console.log(\"comments \", comments);\n    const editedUserName = document.getElementById(\"edit__userName\").value;\n    const editedCourseName = document.getElementById(\"edit__courseName\").value;\n    const editedRating = document.getElementById(\"edit__rating\").value;\n    const editedComment = document.getElementById(\"edit__comment\").value;\n    const url = `https://secure-shelf-01993.herokuapp.com/edit/${idToEdit}`;\n    axios\n      .put(url, {\n        username: editedUserName,\n        coursename: editedCourseName,\n        rating: editedRating,\n        comments: editedComment,\n      })\n      .then((res) => {\n        console.log(\"put update successfully posted\");\n\n        // history.push(\"/feedback_summary\");\n      })\n      .catch((err) => {\n        console.log(\"coming from summary.js handle edit and save\", err);\n        ///res.status(500).json({ msg: \"Error Occurred\" });\n      });\n    setEditedRecord(\"Editing done\");\n    $(\"#myModal\").modal(\"hide\");\n  };\n\n  return (\n    <div className=\"summary\">\n      <h1>SUMMARY OF FEEDBACK</h1>\n      {console.log(\"Summary Response \", response)}\n\n      <table style={{ width: \"100%\" }}>\n        <tr>\n          <th>Username</th>\n          <th>Coursename</th>\n          <th>Rating</th>\n          <th>Comments</th>\n          <th></th>\n        </tr>\n\n        {response.map((item, index) => (\n          <tr key={item._id} id={item._id}>\n            <td>{item.username}</td>\n            <td>{item.coursename}</td>\n            <td>{item.rating}</td>\n            <td>{item.comments}</td>\n            <td>\n              <EditRoundedIcon\n                className=\"edit__button\"\n                onClick={() => {\n                  showModal(item._id);\n                }}\n              />\n            </td>\n          </tr>\n        ))}\n      </table>\n      <div class=\"modal\" tabindex=\"-1\" role=\"dialog\" id=\"myModal\">\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">EDIT USER FEEDBACK</h5>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <form action=\"\" className=\"edit__summary\">\n                <input\n                  type=\"text\"\n                  placeholder=\"User Name\"\n                  id=\"edit__userName\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Course Name\"\n                  id=\"edit__courseName\"\n                />\n                <input type=\"text\" placeholder=\"Rating\" id=\"edit__rating\" />\n                <input type=\"text\" placeholder=\"Comments\" id=\"edit__comment\" />\n                <input type=\"text\" hidden id=\"unique_id\" />\n              </form>\n            </div>\n            <div class=\"modal-footer\">\n              <button\n                type=\"button\"\n                class=\"btn btn-primary\"\n                onClick={handleSave}\n              >\n                Save\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <RenderData fn={setResponse} />\n      {showEdited && <RenderEdited fn={setResponse} />}\n    </div>\n  );\n};\n\nexport default FeedbackSummary;\n","import React from \"react\";\nimport Feedback from \"./components/Feedback\";\nimport {\n  useHistory,\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport FeedbackConfirmation from \"./components/FeedbackConfirmation\";\nimport FeedbackSummary from \"./components/FeedbackSummary\";\nimport \"./App.css\";\n\nfunction App() {\n  const history = useHistory();\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          {/* <Route path =\"/\">\n          {history.push(\"/feedback\")}\n       </Route> */}\n          <Redirect exact from=\"/\" to=\"/feedback\" />\n          <Route path=\"/feedback_submit\" exact>\n            <FeedbackConfirmation />\n          </Route>\n          <Route path=\"/feedback_summary\" exact>\n            <FeedbackSummary />\n          </Route>\n          <Route path=\"/feedback\">\n            <Feedback />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\n\nasync function userInfoService() {\n  return await axios\n    .get(\"https://secure-shelf-01993.herokuapp.com/feedback_summary\")\n    .then((res) => {\n      console.log(\"successfully received \", res);\n      return res.data;\n    });\n}\n\nexport default userInfoService;\n","import {takeEvery,call,put} from \"redux-saga/effects\";\nimport userInfoService from \"../services/userInfoService\";\nimport {setUserInfo} from \"../reducers/userInfo\";\nimport {useDispatch,useSelector} from \"react-redux\";\n\n\nfunction* fetchUserInfo(){\n    \n    try{\n        console.log(\"Redux Saga has started to run\");\n        const userInfo=yield call(userInfoService);\n       \n        console.log(\"Why is it not coming here\");\n        console.log(userInfo);\n        yield put( {type:setUserInfo,payload:userInfo});\n    }catch(e){\n       \n    }\n}\n\nexport function* waitForUserInfo(){\n    console.log(\"Is it even coming here\");\n    yield takeEvery('FETCH_USER_INFO',fetchUserInfo);\n\n}\n\n\n\n","import {all} from \"redux-saga/effects\";\nimport {waitForUserInfo} from \"./sagas/userInfoSaga\";\n\nexport default function* rootSaga(){\n    yield all([waitForUserInfo()]);\n}","import {\n  applyMiddleware,\n  configureStore,\n  createStore,\n  getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport userReducer from \"../reducers/userSlice\";\nimport rootSaga from \"../rootSaga\";\nimport courseReducer from \"../reducers/courseSlice\";\nimport commentReducer from \"../reducers/commentSlice\";\nimport userInfoReducer from \"../reducers/userInfo\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst rootReducer = combineReducers({\n  user: userReducer,\n  course: courseReducer,\n  comments: commentReducer,\n  userInfo: userInfoReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(rootSaga);\n//   const store =configureStore({\n//   reducer: {\n//     user: userReducer,\n//     course: courseReducer,\n//     comments:commentReducer,\n//     userInfo:userInfoReducer,\n//   },\n//   // middleware: [...getDefaultMiddleware(), sagaMiddleware],\n\n// },applyMiddleware(sagaMiddleware));\n// sagaMiddleware.run(rootSaga);\n// rootSaga(sagaMiddleware);\n\n// const store=()=>{\n//    const sagaMiddleware = createSagaMiddleware();\n//    return{\n//      ...createStore({\n//       reducer: {\n//             user: userReducer,\n//             course: courseReducer,\n//             comments:commentReducer,\n//             userInfo:userInfoReducer,\n//           },\n//      },applyMiddleware(sagaMiddleware)),\n//      runSaga:sagaMiddleware.run(rootSaga)\n//    }\n// };\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}